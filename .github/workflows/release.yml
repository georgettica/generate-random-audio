name: Release Workflow

on:
  release:
    types:
      - created

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
          - target: x86_64-apple-darwin
            archive: zip
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Compile and release
        id: compile
        uses: rust-build/rust-build.action@v1.4.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          UPLOAD_MODE: none
      
      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: /home/runner/.cargo/bin/cargo-cyclonedx
          key: primes

      - name: Generate Prime Numbers
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run:  cargo install cargo-cyclonedx

      # fails on windows, maybe later we can debug
      - name: Generate SBOM
        if: "${{ matrix.target != 'x86_64-pc-windows-gnu' }}"
        run: |
          cargo cyclonedx
        env:
          CARGO_TERM_COLOR: "always"
        working-directory: ${{ github.workspace }}

      - name: Release
        id: release
        uses: ncipollo/release-action@main
        with:
          allowUpdates: true
          artifacts: ${{ steps.compile.outputs.BUILT_ARCHIVE }},${{ steps.compile.outputs.BUILT_CHECKSUM }}

          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          
          artifactErrorsFailBuild: true

      - name: Upload Release Asset
        if: "${{ matrix.target != 'x86_64-pc-windows-gnu' }}"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: bom.xml
          asset_name: bom.xml
          asset_content_type: application/text