name: Release Workflow

on:
  release:
    types:
      - created

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@v3
      - name: Compile and release
        id: compile
        uses: rust-build/rust-build.action@v1.4.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          UPLOAD_MODE: none
      # fails on windows, maybe later we can debug
      - name: Generate SBOM
        if: "${{ matrix.target != 'x86_64-pc-windows-gnu' }}"
        run: |
          cargo install cargo-spdx
          cargo spdx
          mv spdx.txt ${{ matrix.target}}.spdx.txt
        env:
          CARGO_TERM_COLOR: "always"
        working-directory: ${{ github.workspace }}

      # - uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const fs = require('fs');

      #       const data = {owner: "georgettica", repo: "generate-random-audio"}
      #       const res = await github.rest.repos.getLatestRelease(data)
      #       const output_url = res["data"]["upload_url"]
      #       const release_id = res["data"]["id"]
          
      #       fs.appendFile(process.env.GITHUB_ENV, 'RELEASE_OUTPUT_URL="' + output_url + '"', function (err) {
      #         if (err) throw err;
      #         console.log('Saved!');
      #       });
      #       fs.appendFile(process.env.GITHUB_ENV, 'RELEASE_ID="' + release_id + '"', function (err) {
      #         if (err) throw err;
      #         console.log('Saved!');
      #       });
            
      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ env.RELEASE_OUTPUT_URL }}
      #     asset_path: ${{ steps.compile.outputs.BUILT_CHECKSUM }}
      #     asset_name: ${{ steps.compile.outputs.BUILT_CHECKSUM }}
      #     asset_content_type: application/text
      - name: Release
        uses: ncipollo/release-action@main
        with:
          allowUpdates: true
          artifacts: ${{ steps.compile.outputs.BUILT_ARCHIVE }},${{ steps.compile.outputs.BUILT_CHECKSUM }},${{ matrix.target}}.spdx.txt
          # spdx.txt

          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          
          artifactErrorsFailBuild: true

          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          
